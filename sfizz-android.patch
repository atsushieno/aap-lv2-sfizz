diff --git a/cmake/SfizzConfig.cmake b/cmake/SfizzConfig.cmake
index 20c9660a..417d5a8e 100644
--- a/cmake/SfizzConfig.cmake
+++ b/cmake/SfizzConfig.cmake
@@ -101,8 +101,18 @@ if (SFIZZ_USE_SNDFILE OR SFIZZ_DEMOS OR SFIZZ_BENCHMARKS OR SFIZZ_RENDER)
         target_include_directories(sfizz-sndfile INTERFACE "${SNDFILE_INCLUDE_DIR}")
         target_link_libraries(sfizz-sndfile INTERFACE SndFile::sndfile)
     else()
+        if (ANDROID)
+            get_filename_component (LV2_INCLUDE "../../../external/lv2/" ABSOLUTE)
+            get_filename_component (SFIZZ_DEPS_DIST "${CMAKE_CURRENT_LIST_DIR}}/../../../dependencies/sfizz-deps/dist/${CMAKE_ANDROID_ARCH_ABI}" ABSOLUTE)
+            set (ENV{PKG_CONFIG_PATH} "${SFIZZ_DEPS_DIST}/lib/pkgconfig")
+        endif (ANDROID)
         find_package(PkgConfig REQUIRED)
         pkg_check_modules(SNDFILE "sndfile" REQUIRED)
+        if (ANDROID) # FIXME: it is kind of hack, we should resort to pkg-config...
+            target_include_directories(sfizz-sndfile INTERFACE ${LV2_INCLUDE} ${SFIZZ_DEPS_DIST}/include)
+            target_link_directories(sfizz-sndfile INTERFACE ${SFIZZ_DEPS_DIST}/lib)
+            target_link_libraries(sfizz-sndfile INTERFACE sndfile ogg vorbis vorbisenc vorbisfile FLAC)
+        endif (ANDROID)
         target_include_directories(sfizz-sndfile INTERFACE ${SNDFILE_INCLUDE_DIRS})
         if (SFIZZ_STATIC_DEPENDENCIES)
             target_link_libraries(sfizz-sndfile INTERFACE ${SNDFILE_STATIC_LIBRARIES})
diff --git a/external/st_audiofile/thirdparty/libaiff b/external/st_audiofile/thirdparty/libaiff
index ce5a0167..78864a4a 160000
--- a/external/st_audiofile/thirdparty/libaiff
+++ b/external/st_audiofile/thirdparty/libaiff
@@ -1 +1 @@
-Subproject commit ce5a0167a3d636915d62ad59232e20367557164d
+Subproject commit 78864a4a2e769e426be8cfd78ae7f5f72e236c33
diff --git a/lv2/CMakeLists.txt b/lv2/CMakeLists.txt
index 743b26d2..ed2ae7a9 100644
--- a/lv2/CMakeLists.txt
+++ b/lv2/CMakeLists.txt
@@ -62,12 +62,12 @@ endif()
 # <build_dir>/lv2/<plugin_name>.lv2/<plugin_name>.<ext>
 set_target_properties (${LV2PLUGIN_PRJ_NAME} PROPERTIES PREFIX "")
 set_target_properties (${LV2PLUGIN_PRJ_NAME} PROPERTIES OUTPUT_NAME "${PROJECT_NAME}")
-set_target_properties (${LV2PLUGIN_PRJ_NAME} PROPERTIES LIBRARY_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/Contents/Binary/$<0:>")
+set_target_properties (${LV2PLUGIN_PRJ_NAME} PROPERTIES LIBRARY_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/$<0:>")
 
 if (SFIZZ_LV2_UI)
     set_target_properties (${LV2PLUGIN_PRJ_NAME}_ui PROPERTIES PREFIX "")
     set_target_properties (${LV2PLUGIN_PRJ_NAME}_ui PROPERTIES OUTPUT_NAME "${PROJECT_NAME}_ui")
-    set_target_properties (${LV2PLUGIN_PRJ_NAME}_ui PROPERTIES LIBRARY_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/Contents/Binary/$<0:>")
+    set_target_properties (${LV2PLUGIN_PRJ_NAME}_ui PROPERTIES LIBRARY_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/$<0:>")
 endif()
 
 # Generate *.ttl files from *.in sources,
@@ -108,9 +108,9 @@ if (NOT MSVC)
     install(DIRECTORY ${PROJECT_BINARY_DIR} DESTINATION ${LV2PLUGIN_INSTALL_DIR}
         COMPONENT "lv2")
     bundle_dylibs(lv2
-        "${LV2PLUGIN_INSTALL_DIR}/${PROJECT_NAME}.lv2/Contents/Binary/sfizz.so"
+        "${LV2PLUGIN_INSTALL_DIR}/${PROJECT_NAME}.lv2/sfizz.so"
         COMPONENT "lv2")
     bundle_dylibs(lv2-ui
-        "${LV2PLUGIN_INSTALL_DIR}/${PROJECT_NAME}.lv2/Contents/Binary/sfizz_ui.so"
+        "${LV2PLUGIN_INSTALL_DIR}/${PROJECT_NAME}.lv2/sfizz_ui.so"
         COMPONENT "lv2")
 endif()
diff --git a/lv2/manifest.ttl.in b/lv2/manifest.ttl.in
index ab407d33..d6832c0e 100644
--- a/lv2/manifest.ttl.in
+++ b/lv2/manifest.ttl.in
@@ -4,10 +4,10 @@
 
 <@LV2PLUGIN_URI@>
   a lv2:Plugin ;
-  lv2:binary <Contents/Binary/@PROJECT_NAME@@CMAKE_SHARED_MODULE_SUFFIX@> ;
+  lv2:binary <@PROJECT_NAME@@CMAKE_SHARED_MODULE_SUFFIX@> ;
   rdfs:seeAlso <@PROJECT_NAME@.ttl> .
 
 @LV2PLUGIN_IF_ENABLE_UI@<@LV2PLUGIN_URI@#ui>
 @LV2PLUGIN_IF_ENABLE_UI@    a ui:@LV2_UI_TYPE@ ;
-@LV2PLUGIN_IF_ENABLE_UI@    ui:binary <Contents/Binary/@PROJECT_NAME@_ui@CMAKE_SHARED_MODULE_SUFFIX@> ;
+@LV2PLUGIN_IF_ENABLE_UI@    ui:binary <@PROJECT_NAME@_ui@CMAKE_SHARED_MODULE_SUFFIX@> ;
 @LV2PLUGIN_IF_ENABLE_UI@    rdfs:seeAlso <@PROJECT_NAME@_ui.ttl> .
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 539a2ec0..a54faeca 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -213,6 +213,13 @@ target_include_directories (sfizz_parser PUBLIC sfizz)
 target_include_directories (sfizz_parser PUBLIC external)
 target_link_libraries (sfizz_parser PUBLIC absl::strings PRIVATE absl::flat_hash_map)
 
+if (ANDROID)
+    get_filename_component(AAP_INCLUDE_DIR "../../../aap-include-hack/include" ABSOLUTE)
+    get_filename_component(AAP_REF_LIB_DIR "../../../dependencies/androidaudioplugin-aar/jni/${CMAKE_ANDROID_ARCH_ABI}" ABSOLUTE)
+
+    target_include_directories (sfizz_parser PUBLIC "${AAP_INCLUDE_DIR}")
+endif()
+
 # Sfizz static library
 add_library(sfizz_static STATIC)
 target_sources(sfizz_static PRIVATE
@@ -221,6 +228,11 @@ target_include_directories (sfizz_static PUBLIC .)
 target_include_directories (sfizz_static PUBLIC external)
 target_link_libraries (sfizz_static PUBLIC absl::strings absl::span)
 target_link_libraries (sfizz_static PRIVATE sfizz_parser absl::flat_hash_map Threads::Threads st_audiofile sfizz-pugixml sfizz-spline sfizz-tunings sfizz-kissfft sfizz-cpuid sfizz-jsl sfizz-atomic)
+if (ANDROID)
+    target_include_directories (sfizz_static PUBLIC "${AAP_INCLUDE_DIR}")
+    target_link_directories (sfizz_static PUBLIC "${AAP_REF_LIB_DIR}")
+    target_link_libraries(sfizz_static PRIVATE android androidaudioplugin)
+endif()
 set_target_properties (sfizz_static PROPERTIES OUTPUT_NAME sfizz PUBLIC_HEADER "sfizz.h;sfizz.hpp")
 if (WIN32)
     target_compile_definitions (sfizz_static PRIVATE _USE_MATH_DEFINES)
@@ -248,6 +260,11 @@ if (SFIZZ_SHARED)
     target_include_directories (sfizz_shared PRIVATE .)
     target_include_directories (sfizz_shared PRIVATE external)
     target_link_libraries (sfizz_shared PRIVATE absl::strings absl::span sfizz_parser absl::flat_hash_map Threads::Threads st_audiofile sfizz-pugixml sfizz-spline sfizz-tunings sfizz-kissfft sfizz-cpuid sfizz-jsl sfizz-atomic)
+    if (ANDROID)
+        target_include_directories (sfizz_shared PUBLIC "${AAP_INCLUDE_DIR}")
+        target_link_directories (sfizz_shared PUBLIC "${AAP_REF_LIB_DIR}")
+        target_link_libraries(sfizz_shared PRIVATE android androidaudioplugin)
+    endif()
     if (WIN32)
         target_compile_definitions (sfizz_shared PRIVATE _USE_MATH_DEFINES)
     endif()
diff --git a/src/sfizz/parser/Parser.cpp b/src/sfizz/parser/Parser.cpp
index 9ed460c2..717ede5a 100644
--- a/src/sfizz/parser/Parser.cpp
+++ b/src/sfizz/parser/Parser.cpp
@@ -90,6 +90,18 @@ void Parser::includeNewFile(const fs::path& path, std::unique_ptr<Reader> reader
         return;
     }
 
+#if ANDROID
+    if (!reader) {
+        auto assetReader = absl::make_unique<AndroidAssetReader>(fullPath);
+        if (assetReader->hasError()) {
+            SourceLocation loc = assetReader->location();
+            emitError(makeErrorRange(), "Cannot open Android asset for reading: " + fullPath.string());
+            return;
+        }
+        reader = std::move(assetReader);
+    }
+#endif
+
     if (!reader) {
         auto fileReader = absl::make_unique<FileReader>(fullPath);
         if (fileReader->hasError()) {
diff --git a/src/sfizz/parser/ParserPrivate.cpp b/src/sfizz/parser/ParserPrivate.cpp
index 38a99059..78064f9d 100644
--- a/src/sfizz/parser/ParserPrivate.cpp
+++ b/src/sfizz/parser/ParserPrivate.cpp
@@ -5,6 +5,7 @@
 // If not, contact the sfizz maintainers at https://github.com/sfztools/sfizz
 
 #include "ParserPrivate.h"
+#include <jni.h>
 
 namespace sfz {
 
@@ -124,9 +125,47 @@ void Reader::updateSourceLocationRemoving(int byte)
 
 //------------------------------------------------------------------------------
 
+#if ANDROID
+AndroidAssetReader::AndroidAssetReader(const fs::path &filePath)
+        : Reader(filePath)
+{
+    auto ctx = aap::get_android_application_context();
+    if (!ctx)
+        return;
+    auto jvm = aap::get_android_jvm();
+    jvm->functions->AttachCurrentThread(jvm, &_env, nullptr);
+    auto assetManager = aap::get_android_asset_manager(_env);
+    int offset = filePath.has_filename() && filePath.string()[0] == '/' ? 1 : 0;
+    _asset = AAssetManager_open(assetManager, filePath.c_str() + offset, AASSET_MODE_RANDOM);
+}
+
+AndroidAssetReader::~AndroidAssetReader() noexcept
+{
+    if (_asset)
+        AAsset_close(_asset);
+    auto jvm = aap::get_android_jvm();
+    jvm->functions->DetachCurrentThread(jvm);
+}
+
+int AndroidAssetReader::getNextStreamByte()
+{
+    uint8_t b;
+    if (AAsset_read(_asset, &b, 1) == 1)
+        return b;
+    return -1;
+}
+
+bool AndroidAssetReader::hasError()
+{
+    return _asset == nullptr;
+}
+
+#endif
+
 FileReader::FileReader(const fs::path& filePath)
     : Reader(filePath), _fileStream(filePath)
 {
+    assert(false);
 }
 
 bool FileReader::hasError()
diff --git a/src/sfizz/parser/ParserPrivate.h b/src/sfizz/parser/ParserPrivate.h
index 7e271e26..5f75a164 100644
--- a/src/sfizz/parser/ParserPrivate.h
+++ b/src/sfizz/parser/ParserPrivate.h
@@ -11,6 +11,13 @@
 #include <string>
 #include <fstream>
 
+#if ANDROID
+#include <jni.h>
+#include <android/asset_manager.h>
+#include <android/asset_manager_jni.h>
+#include "aap/android-context.h"
+#endif
+
 namespace sfz {
 
 /**
@@ -104,6 +111,22 @@ private:
     std::vector<int> _lineNumColumns;
 };
 
+#if ANDROID
+class AndroidAssetReader : public Reader {
+public:
+    explicit AndroidAssetReader(const fs::path& filePath);
+    virtual ~AndroidAssetReader() noexcept;
+    bool hasError();
+
+protected:
+    int getNextStreamByte() override;
+
+private:
+    JNIEnv* _env;
+    AAsset* _asset;
+};
+#endif
+
 /**
  * @brief File-based version of Reader.
  */
diff --git a/vst/external/VST_SDK/VST3_SDK/base b/vst/external/VST_SDK/VST3_SDK/base
index 4f6a7184..7b977c03 160000
--- a/vst/external/VST_SDK/VST3_SDK/base
+++ b/vst/external/VST_SDK/VST3_SDK/base
@@ -1 +1 @@
-Subproject commit 4f6a7184f20f40a7c940a6717e6e0d8b35eeea63
+Subproject commit 7b977c031f42a6bab08e8b10f4f8df0a1f516c38
diff --git a/vst/external/VST_SDK/VST3_SDK/pluginterfaces b/vst/external/VST_SDK/VST3_SDK/pluginterfaces
index 8c07a58d..fe202edc 160000
--- a/vst/external/VST_SDK/VST3_SDK/pluginterfaces
+++ b/vst/external/VST_SDK/VST3_SDK/pluginterfaces
@@ -1 +1 @@
-Subproject commit 8c07a58d84c544a73e1ccad2efae200505796773
+Subproject commit fe202edc93e9a01a1f79a614cc9a292dc9bf3e6e
diff --git a/vst/external/VST_SDK/VST3_SDK/public.sdk b/vst/external/VST_SDK/VST3_SDK/public.sdk
index b63097eb..a3a3ed1b 160000
--- a/vst/external/VST_SDK/VST3_SDK/public.sdk
+++ b/vst/external/VST_SDK/VST3_SDK/public.sdk
@@ -1 +1 @@
-Subproject commit b63097ebce2105845aa97d04808fca4dfd51307c
+Subproject commit a3a3ed1b1620df0b064564f1fd5423ae110234a0
