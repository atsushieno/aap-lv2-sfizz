plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 29
        targetSdkVersion 30
        versionCode 1
        versionName "0.1.16"

        externalNativeBuild {
            cmake {
                arguments "-DSFIZZ_USE_SNDFILE=0", "-DENABLE_LTO=off", "-DSFIZZ_VST=off", "-DSFIZZ_LV2_UI=off", "-DSFIZZ_JACK=off", "-DSFIZZ_RENDER=off", "-DSFIZZ_SHARED=off"
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    ndkVersion "21.3.6528147"

    buildTypes {
        debug {
            packagingOptions {
                doNotStrip "**/*.so"
            }
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "../external/sfizz/CMakeLists.txt"
        }
    }
    // FIXME: enable these sections once we migrated to prefab.
    /*
    buildFeatures {
        prefab true
    }
    */

    aaptOptions {
        noCompress 'wav'
    }
}

dependencies {
    implementation 'org.androidaudioplugin:androidaudioplugin:0.6.16'
    implementation 'org.androidaudioplugin:androidaudioplugin-ui-compose:0.6.16'
    implementation 'org.androidaudioplugin:androidaudioplugin-midi-device-service:0.6.16'
    implementation 'org.androidaudioplugin:androidaudioplugin-lv2:0.1.16'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.startup:startup-runtime:1.1.0-beta01'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'org.androidaudioplugin:androidaudioplugin-testing:0.6.16'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
}


task deleteLV2Manifests(type: Delete) {
    delete 'src/main/assets/lv2/sfizz.lv2'
}

tasks.whenTaskAdded { task ->
    // FIXME: it's hacky, but `clean` didn't work.
    if (task.name == "externalNativeBuildCleanDebug" || task.name == "externalNativeBuildCleanRelease")
        task.dependsOn deleteLV2Manifests
}
